#!/usr/bin/env bash

# colors
if [[ $(tput colors) -ge 256 ]]; then
    RED=$(tput setaf 196)
    GREEN=$(tput setaf 46)
    YELLOW=$(tput setaf 226)
else
    RED=$(tput setaf 1)
    GREEN=$(tput setaf 2)
    YELLOW=$(tput setaf 3)
fi
NO_COLOR=$(tput sgr0)
BOLD=$(tput bold)

green() {
  printf "${GREEN}%s${NO_COLOR}" "$1"
}

red() {
  printf "${RED}%s${NO_COLOR}" "$1"
}

yellow() {
  printf "${YELLOW}%s${NO_COLOR}" "$1"
}

error() {
  printf "$(red '[ERROR]') %s\n" "$1"
}

info() {
  printf "$(cyan '[INFO]') %s\n" "$1"
}

success() {
  printf "$(green '[SUCCESS]') %s\n" "$1"
}

warn() {
  printf "$(yellow '[WARN]') %s\n" "$1"
}

is_non_zero_string() {
  test -n "${1}"
}

is_file() {
  is_non_zero_string "${1}" && test -f "${1}"
}

is_executable() {
  is_file "${1}" && test -e "${1}"
}

is_directory() {
  is_non_zero_string "${1}" && test -d "${1}"
}

is_git_repo() {
  is_directory "${1}" && test -d "${1}/.git"
}

load_file_if_exists() {
  is_executable "${1}" && source "${1}" || true
}

delete_directory_if_exists() {
  is_directory "${1}" && warn "$(red 'Deleting') ${1}" && sudo rm -rf "${1}"
}

command_exists() {
  type "${1}" &> /dev/null 2>&1
}

load_zsh_configs() {
  command_exists omz && omz reload && return

  file_list=('.zshenv' '.zprofile' '.zshrc')
  for file in "${file_list[@]}"; do
    load_file_if_exists "${HOME}/${file}"
  done
}

is_macos() {
  [[ "${OSTYPE}" =~ ^darwin ]]
}

is_linux() {
  [[ "${OSTYPE}" =~ ^linux-gnu ]]
}

is_windows() {
  [[ "${OSTYPE}" =~ ^(msys|cygwin)$ ]]
}

if is_macos; then
  reinstall_xcode() {
    delete_directory_if_exists "/Applications/Xcode.app"

    xcode-select --install
    sudo xcodebuild -license accept || true
  }

  reinstall_xcode_cmdline_tools() {
    delete_directory_if_exists "/Library/Developer/CommandLineTools"

    touch /tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress
    softwareupdate -ia
    rm /tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress
  }
fi

if is_linux; then
  #Prompt colors
  COLOR256=()
  COLOR256[0]="${RED}"
  COLOR256[256]="${NO_COLOR}"
  COLOR256[257]="${BOLD}"

  PROMPT_COLORS=()

  set_prompt_colors() {
    local h=${1:-0}
    local color=
    local i=0
    local j=0
    for i in {22..231}; do
      ((i % 30 == h)) || continue

      color=${COLOR256[$i]}
      # cache the tput colors
      if [[ -z $color ]]; then
        COLOR256[$i]=$(tput setaf "$i")
        color=${COLOR256[$i]}
      fi
      PROMPT_COLORS[$j]=$color
      ((j++))
    done
  }

  # Prompt command
  _prompt_command() {
          local user=$USER
          local host=${HOSTNAME%%.*}
          local pwd=${PWD/#$HOME/\~}
          local ssh=
          is_non_zero_string "${SSH_CLIENT}" && ssh='[ssh] '
          printf "\033]0;%s%s@%s:%s\007" "$ssh" "$user" "$host" "$pwd"
  }

  # Print all 256 colors
  colors() {
    local i
    for i in {0..255}; do
      printf "\x1b[38;5;${i}mcolor %d\n" "$i"
    done
    tput sgr0
  }
fi
